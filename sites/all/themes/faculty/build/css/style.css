/*
Theme Name: Drupal 7 Gulp Starter Theme
Theme URI: https://github.com/lasseyls/Drupal-7-Starter-Theme
Description: Drupal 7 Gulp Starter Theme for use as a starting template for building custom themes.
Author: Lasse Moos
Author URI: http://www.yourlocalstudio.dk
License: GNU General Public License v2.0
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Version: 1.0
*/
/*
 * Mixin for easy media queries
 * @include bp(tablet) { SCSS here };
*/
/*
 * Mixin for micro clearfix
 * @include microclearfix;
*/
/*
 * Mixin for basic CSS triangles
 * @include triangle(up, #000, 50px)
*/
/*
 * @font-face mixin
 * Bulletproof font-face via Font Squirrel
 * @include fontface('family', 'assets/fonts/', 'myfontname');
 */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
@import url(http://fonts.googleapis.com/css?family=Roboto:400,700,300,500);
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*! HTML5 Boilerplate v4.3.0 | MIT License | http://h5bp.com/ */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: orange;
  text-shadow: none; }

::selection {
  background: orange;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between images, videos, audio and canvas and the bottom of
 * their containers: h5bp.com/i/440
 */
audio,
canvas,
img,
svg,
video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browse Happy prompt
   ========================================================================== */
.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* Alignment */
.alignleft {
  display: inline;
  float: left;
  margin-right: 1.5em; }

.alignright {
  display: inline;
  float: right;
  margin-left: 1.5em; }

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto; }

/* Text meant only for screen readers */
.assistive-text {
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important; }

/*
 * Box Sizing
 *
 * Set that shit to border-box, yo. And fix those pesky pseudo elements
 */
/* ==========================================================================
   Border-box all the things!
   ========================================================================== */
*,
:before,
:after {
  box-sizing: border-box; }

/* ==========================================================================
   Margins and paddings
   ========================================================================== */
.no-lr-padding {
  padding: 0 !important; }

.grid {
  margin: 0 0 20px 0;
  *zoom: 1; }
  .grid:before, .grid:after {
    content: "";
    display: table; }
  .grid:after {
    clear: both; }

[class*='col-'] {
  float: left;
  padding-right: 20px; }
  .grid [class*='col-']:last-of-type {
    padding-right: 0; }

.col-1-2 {
  width: 50%; }

.col-1-3 {
  width: 33.33%; }

.col-2-3 {
  width: 66.66%; }

.col-1-4 {
  width: 25%; }

.col-3-4 {
  width: 75%; }

.col-1-8 {
  width: 12.5%; }

.col-7-8 {
  width: 87.5%; }

.module {
  padding: 20px; }

/* Opt-in outside padding */
.grid-pad {
  padding: 20px 0 20px 20px; }
  .grid-pad [class*='col-']:last-of-type {
    padding-right: 20px; }

/* GENERAL */
body {
  font-family: 'Roboto', sans-serif; }

a,
a:visited {
  color: blue; }

a:hover {
  color: blue; }

::-moz-selection {
  background: orange;
  text-shadow: none; }

::selection {
  background: orange;
  text-shadow: none; }

/* HEADINGS / TYPOGRAPHY */
h1,
h2,
h3,
h4 {
  font-weight: normal;
  margin: 0 0 10px 0; }

/* STRUCTURE */
.container {
  max-width: 1110px;
  margin: 20px auto; }

/* HEADER */
header {
  background: #FFFFFF;
  font-family: 'Roboto', sans-serif; }
  header .site-slogan {
    font-size: 30px;
    color: #7b7c7e;
    line-height: 90px;
    text-align: center;
    font-weight: 400; }
    @media (max-width: 1024px) {
      header .site-slogan {
        display: none; } }

#logo {
  height: 90px;
  max-width: 100%;
  float: left; }
  @media (max-width: 1024px) {
    #logo {
      display: none; } }
  #logo img {
    height: 100%;
    width: auto;
    max-width: 100%; }

.mobile-menu {
  display: none; }
  @media (max-width: 1024px) {
    .mobile-menu {
      display: inline-block;
      width: 100%; }
      .mobile-menu .nav-trigger {
        /*            height: 85px;*/
        background: #25304f;
        float: left;
        padding: 1em;
        width: 4em;
        height: 3em; }
        .mobile-menu .nav-trigger .icon-bar {
          border-radius: 1px;
          display: block;
          height: 2px;
          width: 2em;
          background: #ffffff; }
        .mobile-menu .nav-trigger .icon-bar + .icon-bar {
          margin-top: 0.4em; }
      .mobile-menu #logo-mobile {
        display: inline-block;
        max-width: 12em;
        text-align: center; }
        .mobile-menu #logo-mobile img {
          max-width: 90%;
          margin: 0 0 0 5%; }
      .mobile-menu .extra-trigger {
        width: 4em;
        height: 3em;
        float: right;
        background: url("../images/icon-school.png") no-repeat center center #dc1b74;
        background-size: 2em; } }

/* NAV */
.nav-container {
  width: 100%;
  float: left;
  text-align: right;
  height: 58px; }
  @media (max-width: 1024px) {
    .nav-container {
      position: absolute;
      width: 80%;
      left: -100%; } }
  .nav-container nav #main-menu {
    margin: 0;
    float: right;
    background: #25304f;
    padding: 0 15px; }
    @media (max-width: 1024px) {
      .nav-container nav #main-menu {
        width: 100%; } }
    .nav-container nav #main-menu li {
      float: left;
      height: 58px;
      line-height: 58px;
      padding: 0; }
      @media (max-width: 1024px) {
        .nav-container nav #main-menu li {
          width: 100%; } }
      .nav-container nav #main-menu li a {
        color: #ffffff;
        font-size: 11px;
        text-decoration: none;
        text-transform: uppercase;
        border-right: 1px solid #676f84;
        display: inline-block;
        height: 20px;
        line-height: 20px;
        padding: 0 5px; }
        @media (max-width: 1024px) {
          .nav-container nav #main-menu li a {
            width: 100%;
            text-align: center; } }
    .nav-container nav #main-menu li.last a {
      border: 0; }

/* MAIN */
#content .view-frontpage .node-page .top-image-content {
  background-repeat: no-repeat;
  background-size: cover;
  height: 300px;
  width: 100%;
  float: left; }
  @media (max-width: 1024px) {
    #content .view-frontpage .node-page .top-image-content {
      height: 220px; }
      #content .view-frontpage .node-page .top-image-content .container {
        float: left;
        height: 100%;
        margin: 0;
        position: relative;
        width: 100%; } }
  #content .view-frontpage .node-page .top-image-content h1 {
    max-width: 1110px;
    margin: 200px auto 0;
    float: left;
    color: #ffffff;
    font-size: 56px;
    font-weight: 300; }
    @media (max-width: 1024px) {
      #content .view-frontpage .node-page .top-image-content h1 {
        padding: 0 35px;
        color: #25304f;
        background: #ffffff;
        max-width: 100%;
        position: absolute;
        left: 35px;
        right: 35px;
        bottom: 0;
        text-align: center;
        font-size: 1.2em;
        padding: 0.5em; } }

#content .view-frontpage .node-page > .container .field-name-body {
  float: left; }
  @media (max-width: 1024px) {
    #content .view-frontpage .node-page > .container .field-name-body {
      padding: 0 35px; } }

@media (max-width: 1024px) {
  #content .view-frontpage .node-page > .container .links.inline {
    padding: 0 35px; } }

/* SIDEBAR */
/* FOOTER */
footer {
  float: left;
  width: 100%; }
  footer > .region, footer .custom-region-map {
    float: left;
    width: 100%; }
  footer #block-menu-menu-social-menu {
    background: url("../images/footer-lines.png") no-repeat 50% 50% #343434;
    float: left;
    width: 100%;
    height: 120px; }
    @media (max-width: 1024px) {
      footer #block-menu-menu-social-menu {
        background: #343434; } }
    footer #block-menu-menu-social-menu .menu {
      text-align: center; }
      footer #block-menu-menu-social-menu .menu li {
        list-style-image: none;
        list-style-type: none;
        display: inline-block; }
  footer .custom-region-map {
    background: url("../images/google-map.jpg") no-repeat 0 0 #2b2b2b;
    height: 238px; }
    @media (max-width: 1024px) {
      footer .custom-region-map {
        background: #2b2b2b; } }
    footer .custom-region-map .region-footer {
      max-width: 1110px;
      margin: 0 auto; }
      @media (max-width: 1024px) {
        footer .custom-region-map .region-footer {
          display: none; } }
      footer .custom-region-map .region-footer > .block {
        width: 25%;
        float: left;
        padding: 40px 0 0; }
      footer .custom-region-map .region-footer .block-faculty-general .content a {
        border: 1px solid #ffffff;
        background: url("../images/icon-footer-arrow.png") no-repeat 90% 18px transparent;
        color: #ffffff;
        font-size: 12px;
        text-decoration: none;
        text-transform: uppercase;
        border-radius: 5px 5px 5px 5px;
        -moz-border-radius: 5px 5px 5px 5px;
        -webkit-border-radius: 5px 5px 5px 5px;
        padding: 13px 40px 13px 13px;
        display: inline-block; }
      footer .custom-region-map .region-footer .block-faculty-general .content a:hover {
        background: url("../images/icon-footer-arrow.png") no-repeat 90% -24px #ffffff;
        color: #2c2c2c; }
      footer .custom-region-map .region-footer .block-faculty-general h3 {
        font-size: 12px;
        color: #ffffff;
        font-weight: 500;
        text-transform: uppercase; }
      footer .custom-region-map .region-footer .block-faculty-general p {
        font-size: 12px;
        color: #ffffff;
        font-weight: 400;
        line-height: 18px; }
      footer .custom-region-map .region-footer #block-faculty-general-faculty-general-footer-contact p {
        color: #b9b9b9;
        line-height: 18px; }
      footer .custom-region-map .region-footer #block-menu-menu-quick-menu h3 {
        font-size: 12px;
        color: #ffffff;
        font-weight: 500;
        text-transform: uppercase; }
      footer .custom-region-map .region-footer #block-menu-menu-quick-menu li {
        list-style-type: none;
        list-style-image: none;
        padding: 0;
        margin: 0; }
        footer .custom-region-map .region-footer #block-menu-menu-quick-menu li a {
          font-size: 12px;
          color: #b9b9b9;
          font-weight: 400;
          line-height: 18px;
          text-decoration: none; }
    footer .custom-region-map .custom-mobile-actions {
      display: none; }
      @media (max-width: 1024px) {
        footer .custom-region-map .custom-mobile-actions {
          display: inline-block;
          padding: 0;
          margin: 40px 0 0;
          width: 100%; }
          footer .custom-region-map .custom-mobile-actions li {
            width: 33%;
            float: left;
            text-align: center;
            padding: 0 3%; }
            footer .custom-region-map .custom-mobile-actions li a, footer .custom-region-map .custom-mobile-actions li p {
              color: #ffffff;
              font-size: 1em; } }
  footer .region-bottom-footer {
    background: #f7f7f7;
    text-align: center;
    padding: 65px 0 45px; }
    footer .region-bottom-footer .menu {
      display: inline-block;
      text-align: center;
      max-width: 1110px;
      padding: 0;
      margin: 0; }
      @media (max-width: 1024px) {
        footer .region-bottom-footer .menu {
          display: none; } }
      footer .region-bottom-footer .menu li {
        display: inline-block;
        margin: 0 10px;
        padding: 0; }
        footer .region-bottom-footer .menu li a {
          font-size: 14px;
          color: #adadad;
          font-weight: 400;
          text-decoration: none;
          text-transform: uppercase; }
        footer .region-bottom-footer .menu li a:hover {
          color: #2b2b2b; }
  footer .region-mention {
    text-align: center;
    padding: 20px 0 60px; }
    @media (max-width: 1024px) {
      footer .region-mention {
        padding: 20px 35px 60px; } }
    footer .region-mention > div {
      display: inline-block; }
      @media (max-width: 1024px) {
        footer .region-mention > div {
          float: right;
          width: 51%;
          text-align: right; } }
    footer .region-mention .content {
      width: auto;
      display: inline;
      color: #a3a3a3;
      font-size: 12px;
      font-weight: 400; }
      @media (max-width: 1024px) {
        footer .region-mention .content {
          font-size: 1em; } }
      footer .region-mention .content ul {
        padding: 0;
        margin: 0; }
        @media (max-width: 1024px) {
          footer .region-mention .content ul {
            display: none; } }
        footer .region-mention .content ul li {
          list-style-image: none;
          list-style-type: none; }
          footer .region-mention .content ul li a {
            color: #a3a3a3;
            font-size: 12px;
            font-weight: 400;
            text-decoration: none; }
            @media (max-width: 1024px) {
              footer .region-mention .content ul li a {
                font-size: 18px; } }

/****************************************
PAGE TEMPLATES
*****************************************/
/* Home Page */
.page-frontpage .view-frontpage .field-name-body .field-item p {
  font-size: 16px;
  line-height: 24px;
  font-weight: 300; }

.page-frontpage .view-frontpage .links li {
  padding: 0; }
  .page-frontpage .view-frontpage .links li a {
    color: #0db9cf;
    font-size: 12px;
    font-weight: 400;
    padding: 0 15px 0 0;
    background: url("../images/arrow-next-blue.png") no-repeat 100% 50% transparent;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 1px; }

/* Blog Page */
/* POSTS */
article {
  clear: both;
  margin: 0 0 35px 0; }

blockquote {
  background: url(assets/images/icons/blockquote.png) no-repeat 0 12px;
  padding: 10px 20px 10px 50px;
  font-style: italic; }

.alignleft {
  float: left;
  width: auto;
  margin: 5px 15px 15px 0; }

.alignright {
  float: right;
  width: auto;
  margin: 5px 0 15px 15px; }

.aligncenter {
  text-align: center;
  margin-bottom: 5px; }

img.aligncenter {
  margin-left: auto;
  margin-right: auto;
  display: block; }

/* SHARING */
.sharing h4 {
  margin-bottom: 0;
  padding-bottom: 0; }

.sharing ul {
  list-style: none;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 5px;
  padding-bottom: 0; }

.sharing li {
  float: left; }

.sharing li:first-child {
  padding-left: 0; }

.sharing .share-twitter {
  padding-top: 1px; }

.sharing .share-facebook {
  padding-top: 1px; }

.sharing .share-googleplus {
  margin-left: 30px; }

/* POST NAVIGATION */
/* BLOCKS */
@media (max-width: 1024px) {
  .region-header {
    display: none; } }

.region-header .block-menu {
  float: left;
  margin: 5px 0 0; }
  .region-header .block-menu .menu {
    padding: 0;
    float: left; }
    .region-header .block-menu .menu li {
      float: left;
      list-style-image: none;
      list-style-type: none;
      padding: 0 8px;
      margin: 0;
      border-right: 1px solid #25304f; }
      .region-header .block-menu .menu li a {
        font-size: 11px;
        line-height: 18px;
        font-weight: 500;
        color: #25304f;
        text-decoration: none;
        text-transform: uppercase;
        float: left; }
    .region-header .block-menu .menu li.last {
      border: 0; }
      .region-header .block-menu .menu li.last a {
        text-indent: -99999px;
        background: url("../images/share.jpg") no-repeat 50% 50% transparent;
        width: 20px;
        height: 20px;
        overflow: hidden; }

.region-header .block-locale {
  float: right; }
  .region-header .block-locale .language-switcher-locale-url {
    float: left;
    padding: 0; }
    .region-header .block-locale .language-switcher-locale-url li {
      list-style-type: none;
      float: left;
      margin: 0 0 0 5px; }
      .region-header .block-locale .language-switcher-locale-url li a {
        display: inline-block;
        width: 27px;
        height: 27px;
        line-height: 27px;
        font-size: 11px;
        font-weight: 500;
        text-align: center;
        text-decoration: none;
        text-transform: uppercase;
        background: #ededed;
        color: #adaeb1; }
      .region-header .block-locale .language-switcher-locale-url li a.active {
        background: #25304f;
        color: #ffffff; }

.region-header .block-search {
  float: left;
  border: 1px solid #d8d8d8;
  border-radius: 5px 5px 5px 5px;
  -moz-border-radius: 5px 5px 5px 5px;
  -webkit-border-radius: 5px 5px 5px 5px;
  width: 100%;
  height: 40px;
  position: relative; }
  .region-header .block-search .form-type-textfield input {
    border: 0;
    float: right;
    height: 30px;
    width: 240px;
    padding: 0 10px;
    margin: 5px 0; }
  .region-header .block-search .form-actions input {
    background: url("../images/icon-search.png") no-repeat 50% 50% transparent;
    text-indent: -9999px;
    overflow: hidden;
    width: 30px;
    border: 0;
    height: 30px;
    position: absolute;
    left: 5px;
    top: 5px; }

.region-content {
  float: left;
  width: 100%; }

.region-middle-white-content {
  float: left;
  width: 100%;
  padding: 80px 0; }
  @media (max-width: 1024px) {
    .region-middle-white-content {
      padding: 0; } }
  .region-middle-white-content .container {
    position: relative; }
    .region-middle-white-content .container .article-block-0 {
      width: 730px;
      height: 493px; }
      @media (max-width: 1024px) {
        .region-middle-white-content .container .article-block-0 {
          width: 100%;
          height: 190px; } }
    .region-middle-white-content .container .article-block-1, .region-middle-white-content .container .article-block-2 {
      width: 350px;
      height: 237px;
      position: absolute !important;
      right: 0;
      top: 0; }
      @media (max-width: 1024px) {
        .region-middle-white-content .container .article-block-1, .region-middle-white-content .container .article-block-2 {
          position: relative !important;
          width: 100%;
          height: 190px; } }
    .region-middle-white-content .container .article-block-2 {
      top: auto;
      bottom: 0; }
    .region-middle-white-content .container .article-block {
      position: relative;
      overflow: hidden; }
      .region-middle-white-content .container .article-block .details {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 0 25px 25px 25px;
        background: url("../images/article-gradient.png") repeat-x 0 0 transparent; }

.region-middle-white-content .container .article-block .details {
  /*background-size: contain;*/ }
        .region-middle-white-content .container .article-block .details .article-tags a {
          color: #c0c0c0;
          font-weight: 500;
          text-decoration: none;
          text-transform: uppercase;
          font-size: 19px;
          margin: 0; }
        .region-middle-white-content .container .article-block .details .article-title a {
          float: left;
          color: #ffffff;
          font-size: 32px;
          text-decoration: none;
          font-weight: bold;
          margin: 0; }
      .region-middle-white-content .container .article-block img {
        width: 100%;
        height: auto; }

.region-bottom-grey-content {
  background: #f8f8f8;
  width: 100%;
  float: left;
  padding: 30px 0; }
  @media (max-width: 1024px) {
    .region-bottom-grey-content {
      display: none; } }
  .region-bottom-grey-content h2 {
    font-size: 32px;
    font-weight: 400; }
  .region-bottom-grey-content .block-views {
    max-width: 1110px;
    margin: 0 auto; }
    .region-bottom-grey-content .block-views tbody {
      border: 0; }
    .region-bottom-grey-content .block-views tr {
      background: transparent;
      border: 0; }
    .region-bottom-grey-content .block-views ul {
      margin: 60px 0 0; }
      .region-bottom-grey-content .block-views ul li {
        list-style-type: none;
        width: 14%;
        float: left;
        margin: 0 1%; }
        .region-bottom-grey-content .block-views ul li .field-name-field-figure-number .field-item {
          color: #0db9cf;
          font-size: 70px;
          line-height: 75px;
          text-align: center; }
        .region-bottom-grey-content .block-views ul li .field-name-field-figure-label .field-item {
          color: #4e4e4e;
          text-align: center;
          font-size: 21px;
          line-height: 24px;
          font-weight: 400; }
      .region-bottom-grey-content .block-views ul li.last .field-name-field-figure-number .field-item {
        font-size: 46px;
        line-height: 56px;
        margin: 20px 0 0; }

.messages.error,
.messages.status {
  float: left; }

/* SEARCH */
/* FORMS */
/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Image replacement
 */
.ir {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  /* IE 6/7 fallback */
  *text-indent: -9999px; }

.ir:before {
  content: "";
  display: block;
  width: 0;
  height: 150%; }

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screenreaders, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.clearfix {
  *zoom: 1; }

/* ==========================================================================
   Print styles.
   Inlined to avoid required HTTP connection: h5bp.com/r
   ========================================================================== */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links for images, or javascript/internal links
     */
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group;
    /* h5bp.com/t */ }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

/*# sourceMappingURL=data:application/json;base64, */